apiVersion: v1
kind: Service
metadata:
  name: hdfs-nn-svc
  namespace: hbase-cluster
spec:
  ports:
    - port: 8020
      name: rpc
    - port: 9870
      name: http
  clusterIP: None
  selector:
    app: hdfs-nn
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-nn
  namespace: hbase-cluster
spec:
  selector:
    matchLabels:
      app: hdfs-nn
  serviceName: hdfs-nn-svc
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hdfs-nn
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - hdfs-nn
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: main
          imagePullPolicy: Always
          image: "192.168.9.128:5000/jayeljj/hadoop-namenode:3.3.4"
          resources:
            requests:
              cpu: "1"
              memory: "1Gi"
          envFrom:
            - configMapRef:
                name: hadoop-env
          env:
            - name: CLUSTER_NAME
              value: hdfs-cluster
            - name: TZ
              value: Asia/Shanghai
          readinessProbe:
            httpGet:
              path: /
              port: 9870
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 9870
            initialDelaySeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: logs
              mountPath: /opt/hadoop-3.3.4/logs
            - name: hdfs-nn-data
              mountPath: /hadoop/dfs/name
      volumes:
        - name: logs
          emptyDir: {}
        - name: hdfs-nn-data
          emptyDir: {}